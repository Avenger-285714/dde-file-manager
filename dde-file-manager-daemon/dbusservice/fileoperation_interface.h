/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -N -c FileOperationInterface -p fileoperation_interface fileoperation.xml
 *
 * qdbusxml2cpp is Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef FILEOPERATION_INTERFACE_H_1470297496
#define FILEOPERATION_INTERFACE_H_1470297496

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.deepin.filemanager.daemon.Operations
 */
class FileOperationInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.deepin.filemanager.daemon.Operations"; }

public:
    FileOperationInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~FileOperationInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QDBusVariant> NewRenameJob(const QString &oldFile, const QString &newFile)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(oldFile) << QVariant::fromValue(newFile);
        return asyncCallWithArgumentList(QStringLiteral("NewRenameJob"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

#endif
