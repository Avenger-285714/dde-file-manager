/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -c DeviceManagerInterface -p dbus_interface/devicemanagerdbus_interface devicemanagerdbus.xml
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef DEVICEMANAGERDBUS_INTERFACE_H
#define DEVICEMANAGERDBUS_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.deepin.filemanager.service.DeviceManager
 */
class DeviceManagerInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.deepin.filemanager.service.DeviceManager"; }

public:
    DeviceManagerInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~DeviceManagerInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> UnmountAllDevices()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("UnmountAllDevices"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void AutoMountCompleted();
};

namespace com {
  namespace deepin {
    namespace filemanager {
      namespace service {
        typedef ::DeviceManagerInterface DeviceManager;
      }
    }
  }
}
#endif
