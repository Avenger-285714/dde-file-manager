/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -i ../../plugins/desktop/ddplugin-dbusregister/operationsstackmanagerdbus.h -c OperationsStackManagerAdaptor -l OperationsStackManagerDbus -a ../../plugins/desktop/ddplugin-dbusregister/dbus_adaptor/operationsstackmanagerdbus_adaptor operationsstackmanagerdbus.xml
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef OPERATIONSSTACKMANAGERDBUS_ADAPTOR_H
#define OPERATIONSSTACKMANAGERDBUS_ADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "../../plugins/desktop/ddplugin-dbusregister/operationsstackmanagerdbus.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.filemanager.service.OperationsStackManager
 */
class OperationsStackManagerAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.filemanager.service.OperationsStackManager")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.filemanager.service.OperationsStackManager\">\n"
"    <method name=\"SaveOperations\">\n"
"      <arg direction=\"in\" type=\"a{sv}\" name=\"values\"/>\n"
"      <annotation value=\"QVariantMap\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"    </method>\n"
"    <method name=\"CleanOperations\"/>\n"
"    <method name=\"RevocationOperations\">\n"
"      <arg direction=\"out\" type=\"a{sv}\"/>\n"
"      <annotation value=\"QVariantMap\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    explicit OperationsStackManagerAdaptor(OperationsStackManagerDbus *parent);
    virtual ~OperationsStackManagerAdaptor();

    inline OperationsStackManagerDbus *parent() const
    { return static_cast<OperationsStackManagerDbus *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void CleanOperations();
    QVariantMap RevocationOperations();
    void SaveOperations(const QVariantMap &values);
Q_SIGNALS: // SIGNALS
};

#endif
