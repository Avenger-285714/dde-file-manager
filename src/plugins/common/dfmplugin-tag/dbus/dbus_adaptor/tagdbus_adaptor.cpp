/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -i ../tagdbus.h -c TagDBusAdaptor -l TagDBus -a dbus_adaptor/tagdbus_adaptor org.deepin.filemanager.tag.xml
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "tagdbus_adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class TagDBusAdaptor
 */

TagDBusAdaptor::TagDBusAdaptor(TagDBus *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

TagDBusAdaptor::~TagDBusAdaptor()
{
    // destructor
}

bool TagDBusAdaptor::CanTagFile(const QString &filePath)
{
    // handle method call org.deepin.filemanager.Tag.CanTagFile
    return parent()->CanTagFile(filePath);
}

bool TagDBusAdaptor::Delete(uint type)
{
    // handle method call org.deepin.filemanager.Tag.Delete
    return parent()->Delete(type);
}

bool TagDBusAdaptor::Delete(uint type, const QVariantMap &value)
{
    // handle method call org.deepin.filemanager.Tag.Delete
    return parent()->Delete(type, value);
}

bool TagDBusAdaptor::Insert(uint type)
{
    // handle method call org.deepin.filemanager.Tag.Insert
    return parent()->Insert(type);
}

bool TagDBusAdaptor::Insert(uint type, const QVariantMap &value)
{
    // handle method call org.deepin.filemanager.Tag.Insert
    return parent()->Insert(type, value);
}

QString TagDBusAdaptor::LastError()
{
    // handle method call org.deepin.filemanager.Tag.LastError
    return parent()->LastError();
}

QDBusVariant TagDBusAdaptor::Query(uint type)
{
    // handle method call org.deepin.filemanager.Tag.Query
    return parent()->Query(type);
}

QDBusVariant TagDBusAdaptor::Query(uint type, const QStringList &value)
{
    // handle method call org.deepin.filemanager.Tag.Query
    return parent()->Query(type, value);
}

bool TagDBusAdaptor::Update(uint type)
{
    // handle method call org.deepin.filemanager.Tag.Update
    return parent()->Update(type);
}

bool TagDBusAdaptor::Update(uint type, const QVariantMap &value)
{
    // handle method call org.deepin.filemanager.Tag.Update
    return parent()->Update(type, value);
}

