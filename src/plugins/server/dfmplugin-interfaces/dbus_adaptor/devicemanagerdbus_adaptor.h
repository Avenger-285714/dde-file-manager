/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -i ../../plugins/server/dfmplugin-interfaces/devicemanagerdbus.h -c DeviceManagerAdaptor -l DeviceManagerDBus -a ../../plugins/server/dfmplugin-interfaces/dbus_adaptor/devicemanagerdbus_adaptor devicemanagerdbus.xml
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef DEVICEMANAGERDBUS_ADAPTOR_H
#define DEVICEMANAGERDBUS_ADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "../../plugins/server/dfmplugin-interfaces/devicemanagerdbus.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.filemanager.service.DeviceManager
 */
class DeviceManagerAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.filemanager.service.DeviceManager")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.filemanager.service.DeviceManager\">\n"
"    <signal name=\"BlockDriveAdded\"/>\n"
"    <signal name=\"BlockDriveRemoved\"/>\n"
"    <signal name=\"BlockDeviceAdded\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"deviceId\"/>\n"
"    </signal>\n"
"    <signal name=\"BlockDeviceRemoved\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"deviceId\"/>\n"
"    </signal>\n"
"    <signal name=\"BlockDeviceFilesystemAdded\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"deviceId\"/>\n"
"    </signal>\n"
"    <signal name=\"BlockDeviceFilesystemRemoved\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"deviceId\"/>\n"
"    </signal>\n"
"    <signal name=\"BlockDeviceMounted\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"deviceId\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"mountPoint\"/>\n"
"    </signal>\n"
"    <signal name=\"BlockDeviceUnmounted\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"deviceId\"/>\n"
"    </signal>\n"
"    <method name=\"IsMonotorWorking\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"DetachBlockDevice\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"    </method>\n"
"    <method name=\"DetachProtocolDevice\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"    </method>\n"
"    <method name=\"DetachAllMountedDevices\"/>\n"
"    <method name=\"MountBlockDevice\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"    </method>\n"
"    <method name=\"UnmountBlockDevice\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"    </method>\n"
"    <method name=\"EjectBlockDevice\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"    </method>\n"
"    <method name=\"PoweroffBlockDevice\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"    </method>\n"
"    <method name=\"MountProtocolDevice\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"    </method>\n"
"    <method name=\"UnmountProtocolDevice\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"    </method>\n"
"    <method name=\"GetBlockDevicesIdList\">\n"
"      <arg direction=\"out\" type=\"as\"/>\n"
"      <arg direction=\"in\" type=\"a{sv}\" name=\"opts\"/>\n"
"      <annotation value=\"QVariantMap\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"    </method>\n"
"    <method name=\"QueryBlockDeviceInfo\">\n"
"      <arg direction=\"out\" type=\"a{sv}\"/>\n"
"      <annotation value=\"QVariantMap\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"    </method>\n"
"    <method name=\"GetProtolcolDevicesIdList\">\n"
"      <arg direction=\"out\" type=\"as\"/>\n"
"    </method>\n"
"    <method name=\"QueryProtocolDeviceInfo\">\n"
"      <arg direction=\"out\" type=\"a{sv}\"/>\n"
"      <annotation value=\"QVariantMap\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    DeviceManagerAdaptor(DeviceManagerDBus *parent);
    virtual ~DeviceManagerAdaptor();

    inline DeviceManagerDBus *parent() const
    { return static_cast<DeviceManagerDBus *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void DetachAllMountedDevices();
    void DetachBlockDevice(const QString &id);
    void DetachProtocolDevice(const QString &id);
    void EjectBlockDevice(const QString &id);
    QStringList GetBlockDevicesIdList(const QVariantMap &opts);
    QStringList GetProtolcolDevicesIdList();
    bool IsMonotorWorking();
    void MountBlockDevice(const QString &id);
    void MountProtocolDevice(const QString &id);
    void PoweroffBlockDevice(const QString &id);
    QVariantMap QueryBlockDeviceInfo(const QString &id);
    QVariantMap QueryProtocolDeviceInfo(const QString &id);
    void UnmountBlockDevice(const QString &id);
    void UnmountProtocolDevice(const QString &id);
Q_SIGNALS: // SIGNALS
    void BlockDeviceAdded(const QString &deviceId);
    void BlockDeviceFilesystemAdded(const QString &deviceId);
    void BlockDeviceFilesystemRemoved(const QString &deviceId);
    void BlockDeviceMounted(const QString &deviceId, const QString &mountPoint);
    void BlockDeviceRemoved(const QString &deviceId);
    void BlockDeviceUnmounted(const QString &deviceId);
    void BlockDriveAdded();
    void BlockDriveRemoved();
};

#endif
